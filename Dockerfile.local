FROM alexdev404/dokploy-containerized:latest

# Install Docker CLI and prepare for Docker installation
RUN for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do apt-get remove -y $pkg; done && \
    apt-get update && \
    apt-get install -y ca-certificates openssh-server nano && \
    rm -rf /var/lib/apt/lists/* && \
    install -m 0755 -d /etc/apt/keyrings

# Set up SSH server
RUN mkdir /var/run/sshd && \
    echo 'root:password' | chpasswd && \
    sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \
    sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config && \
    sed -i 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' /etc/pam.d/sshd && \
    echo "export VISIBLE=now" >> /etc/profile

# Add Docker's GPG key using ADD instruction
ADD https://download.docker.com/linux/debian/gpg /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources and install dependencies
RUN chmod a+r /etc/apt/keyrings/docker.asc && \
  echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  tee /etc/apt/sources.list.d/docker.list > /dev/null && \
  apt-get update && \
  apt install fuse-overlayfs -y && \
  rm -rf /var/lib/apt/lists/*

# Create the startup script for Docker and SSH
RUN echo "#!/bin/bash\n \
rm -rf /var/run/docker.pid\n \
/usr/sbin/sshd\n \
dockerd &\n \
counter=0\n \
max_attempts=100\n \
while ! docker info > /dev/null 2>&1; do\n \
  echo 'Waiting for Docker to start...'\n \
  ((counter++))\n \
  if [ \$counter -ge \$max_attempts ]; then\n \
    echo 'Docker failed to start after \$max_attempts attempts. Exiting.'\n \
    exit 1\n \
  fi\n \
  sleep 1\n \
done\n \
docker swarm init\n \
pnpm start &\n \
# Wait for a signal to restart\n \
while true; do\n \
  if [ -f /app/restart.txt ]; then\n \
    echo "Restarting container..."\n \
    # Remove the restart flag\n \
    rm -f /app/restart.txt\n \
    # Stop Docker\n \
    kill -TERM \$(cat /var/run/docker.pid)\\n \\
    # exit the container - exit code is optional\n \
    exit 3010\n \
  fi\n \
  sleep 5\n \
done\n \
" > /app/dockerd-entrypoint.sh && chmod +x /app/dockerd-entrypoint.sh

# Expose SSH port and Docker (if needed)
EXPOSE 22

# Start SSH + Docker + your app
CMD ["/bin/bash", "/app/dockerd-entrypoint.sh"]
